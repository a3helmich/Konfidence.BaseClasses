//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using Konfidence.BaseData.Properties;

#pragma warning disable 1591

namespace Konfidence.BaseData.WSBaseHost {
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name="WSBaseHostServiceSoap", Namespace="http://konfidence.nl/DataItemService")]
    public partial class WSBaseHostService : SoapHttpClientProtocol {
        
        private SendOrPostCallback SaveOperationCompleted;
        
        private SendOrPostCallback GetItemOperationCompleted;
        
        private SendOrPostCallback GetItemByParamOperationCompleted;
        
        private SendOrPostCallback DeleteOperationCompleted;
        
        private SendOrPostCallback BuildItemListOperationCompleted;
        
        private SendOrPostCallback ExecuteCommandOperationCompleted;
        
        private SendOrPostCallback ExecuteTextCommandOperationCompleted;
        
        private SendOrPostCallback TableExistsOperationCompleted;
        
        private SendOrPostCallback ViewExistsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSBaseHostService() {
            this.Url = Settings.Default.BaseDataBaseClasses_WSBaseHost_WSBaseHostService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        public event GetItemCompletedEventHandler GetItemCompleted;
        
        /// <remarks/>
        public event GetItemByParamCompletedEventHandler GetItemByParamCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event BuildItemListCompletedEventHandler BuildItemListCompleted;
        
        /// <remarks/>
        public event ExecuteCommandCompletedEventHandler ExecuteCommandCompleted;
        
        /// <remarks/>
        public event ExecuteTextCommandCompletedEventHandler ExecuteTextCommandCompleted;
        
        /// <remarks/>
        public event TableExistsCompletedEventHandler TableExistsCompleted;
        
        /// <remarks/>
        public event ViewExistsCompletedEventHandler ViewExistsCompleted;
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/Save", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public int Save(ParameterObject[] properties, int id) {
            object[] results = this.Invoke("Save", new object[] {
                        properties,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(ParameterObject[] properties, int id) {
            this.SaveAsync(properties, id, null);
        }
        
        /// <remarks/>
        public void SaveAsync(ParameterObject[] properties, int id, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        properties,
                        id}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/GetItem", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public ParameterObject[] GetItem(int id) {
            object[] results = this.Invoke("GetItem", new object[] {
                        id});
            return ((ParameterObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemAsync(int id) {
            this.GetItemAsync(id, null);
        }
        
        /// <remarks/>
        public void GetItemAsync(int id, object userState) {
            if ((this.GetItemOperationCompleted == null)) {
                this.GetItemOperationCompleted = new SendOrPostCallback(this.OnGetItemOperationCompleted);
            }
            this.InvokeAsync("GetItem", new object[] {
                        id}, this.GetItemOperationCompleted, userState);
        }
        
        private void OnGetItemOperationCompleted(object arg) {
            if ((this.GetItemCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.GetItemCompleted(this, new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/GetItemByParam", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public ParameterObject[] GetItemByParam(ParameterObject[] ParameterList) {
            object[] results = this.Invoke("GetItemByParam", new object[] {
                        ParameterList});
            return ((ParameterObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemByParamAsync(ParameterObject[] ParameterList) {
            this.GetItemByParamAsync(ParameterList, null);
        }
        
        /// <remarks/>
        public void GetItemByParamAsync(ParameterObject[] ParameterList, object userState) {
            if ((this.GetItemByParamOperationCompleted == null)) {
                this.GetItemByParamOperationCompleted = new SendOrPostCallback(this.OnGetItemByParamOperationCompleted);
            }
            this.InvokeAsync("GetItemByParam", new object[] {
                        ParameterList}, this.GetItemByParamOperationCompleted, userState);
        }
        
        private void OnGetItemByParamOperationCompleted(object arg) {
            if ((this.GetItemByParamCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.GetItemByParamCompleted(this, new GetItemByParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/Delete", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public void Delete(int id) {
            this.Invoke("Delete", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteAsync(int id) {
            this.DeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(int id, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        id}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/BuildItemList", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        [return: XmlArrayItem("ArrayOfParameterObject")]
        [return: XmlArrayItem(NestingLevel=1)]
        public ParameterObject[][] BuildItemList() {
            object[] results = this.Invoke("BuildItemList", new object[0]);
            return ((ParameterObject[][])(results[0]));
        }
        
        /// <remarks/>
        public void BuildItemListAsync() {
            this.BuildItemListAsync(null);
        }
        
        /// <remarks/>
        public void BuildItemListAsync(object userState) {
            if ((this.BuildItemListOperationCompleted == null)) {
                this.BuildItemListOperationCompleted = new SendOrPostCallback(this.OnBuildItemListOperationCompleted);
            }
            this.InvokeAsync("BuildItemList", new object[0], this.BuildItemListOperationCompleted, userState);
        }
        
        private void OnBuildItemListOperationCompleted(object arg) {
            if ((this.BuildItemListCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.BuildItemListCompleted(this, new BuildItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/ExecuteCommand", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public int ExecuteCommand(string storedProcedure, object[] parameters) {
            object[] results = this.Invoke("ExecuteCommand", new object[] {
                        storedProcedure,
                        parameters});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteCommandAsync(string storedProcedure, object[] parameters) {
            this.ExecuteCommandAsync(storedProcedure, parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteCommandAsync(string storedProcedure, object[] parameters, object userState) {
            if ((this.ExecuteCommandOperationCompleted == null)) {
                this.ExecuteCommandOperationCompleted = new SendOrPostCallback(this.OnExecuteCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteCommand", new object[] {
                        storedProcedure,
                        parameters}, this.ExecuteCommandOperationCompleted, userState);
        }
        
        private void OnExecuteCommandOperationCompleted(object arg) {
            if ((this.ExecuteCommandCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.ExecuteCommandCompleted(this, new ExecuteCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/ExecuteTextCommand", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public int ExecuteTextCommand(string textCommand) {
            object[] results = this.Invoke("ExecuteTextCommand", new object[] {
                        textCommand});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteTextCommandAsync(string textCommand) {
            this.ExecuteTextCommandAsync(textCommand, null);
        }
        
        /// <remarks/>
        public void ExecuteTextCommandAsync(string textCommand, object userState) {
            if ((this.ExecuteTextCommandOperationCompleted == null)) {
                this.ExecuteTextCommandOperationCompleted = new SendOrPostCallback(this.OnExecuteTextCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteTextCommand", new object[] {
                        textCommand}, this.ExecuteTextCommandOperationCompleted, userState);
        }
        
        private void OnExecuteTextCommandOperationCompleted(object arg) {
            if ((this.ExecuteTextCommandCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.ExecuteTextCommandCompleted(this, new ExecuteTextCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/TableExists", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public bool TableExists(string tableName) {
            object[] results = this.Invoke("TableExists", new object[] {
                        tableName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TableExistsAsync(string tableName) {
            this.TableExistsAsync(tableName, null);
        }
        
        /// <remarks/>
        public void TableExistsAsync(string tableName, object userState) {
            if ((this.TableExistsOperationCompleted == null)) {
                this.TableExistsOperationCompleted = new SendOrPostCallback(this.OnTableExistsOperationCompleted);
            }
            this.InvokeAsync("TableExists", new object[] {
                        tableName}, this.TableExistsOperationCompleted, userState);
        }
        
        private void OnTableExistsOperationCompleted(object arg) {
            if ((this.TableExistsCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.TableExistsCompleted(this, new TableExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://konfidence.nl/DataItemService/ViewExists", RequestNamespace="http://konfidence.nl/DataItemService", ResponseNamespace="http://konfidence.nl/DataItemService", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public bool ViewExists(string viewName) {
            object[] results = this.Invoke("ViewExists", new object[] {
                        viewName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ViewExistsAsync(string viewName) {
            this.ViewExistsAsync(viewName, null);
        }
        
        /// <remarks/>
        public void ViewExistsAsync(string viewName, object userState) {
            if ((this.ViewExistsOperationCompleted == null)) {
                this.ViewExistsOperationCompleted = new SendOrPostCallback(this.OnViewExistsOperationCompleted);
            }
            this.InvokeAsync("ViewExists", new object[] {
                        viewName}, this.ViewExistsOperationCompleted, userState);
        }
        
        private void OnViewExistsOperationCompleted(object arg) {
            if ((this.ViewExistsCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.ViewExistsCompleted(this, new ViewExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            Uri wsUri = new Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.34234")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace="http://konfidence.nl/DataItemService")]
    public partial class ParameterObject {
        
        private string fieldField;
        
        private DbType dbTypeField;
        
        private object valueField;
        
        /// <remarks/>
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public DbType DbType {
            get {
                return this.dbTypeField;
            }
            set {
                this.dbTypeField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.34234")]
    [Serializable()]
    [XmlType(Namespace="http://konfidence.nl/DataItemService")]
    public enum DbType {
        
        /// <remarks/>
        AnsiString,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Decimal,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Guid,
        
        /// <remarks/>
        Int16,
        
        /// <remarks/>
        Int32,
        
        /// <remarks/>
        Int64,
        
        /// <remarks/>
        Object,
        
        /// <remarks/>
        SByte,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        UInt16,
        
        /// <remarks/>
        UInt32,
        
        /// <remarks/>
        UInt64,
        
        /// <remarks/>
        VarNumeric,
        
        /// <remarks/>
        AnsiStringFixedLength,
        
        /// <remarks/>
        StringFixedLength,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        DateTime2,
        
        /// <remarks/>
        DateTimeOffset,
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SaveCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetItemCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParameterObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParameterObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetItemByParamCompletedEventHandler(object sender, GetItemByParamCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetItemByParamCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemByParamCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParameterObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParameterObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteCompletedEventHandler(object sender, AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void BuildItemListCompletedEventHandler(object sender, BuildItemListCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class BuildItemListCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildItemListCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParameterObject[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParameterObject[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void ExecuteCommandCompletedEventHandler(object sender, ExecuteCommandCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ExecuteCommandCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCommandCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void ExecuteTextCommandCompletedEventHandler(object sender, ExecuteTextCommandCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ExecuteTextCommandCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteTextCommandCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void TableExistsCompletedEventHandler(object sender, TableExistsCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class TableExistsCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableExistsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    public delegate void ViewExistsCompletedEventHandler(object sender, ViewExistsCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.34209")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ViewExistsCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewExistsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591